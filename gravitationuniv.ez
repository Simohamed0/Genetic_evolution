/*_________________________________________________________
Project:  Evolutionary Algorithms for the Law of Gravity 
Authors:  FAID Mohamed ELMAHI Aymane
Date:     14/01/2023
__________________________________________________________*/

\User declarations:
#define NB_SAMP 1000 // number of samples
static float sample[NB_SAMP][4]; // 3 for time, y position of earth and y position of sun and force

#define G 6.67430e-11 // gravitational constant
#define M_earth 5.972e24 // mass of earth
#define M_sun 1.989e30 //mass of sun
#define V_earth 29.78e3 // velocity of earth at perihelion
#define r_perihelion 1.471e11 // distance between sun and earth at perihelion
const double pi = 3.14159265358979323846;
const double a = 149.6e6; // distance moyenne entre la Terre et le Soleil en km
const double e = 0.0167;  // excentricité de l'orbite de la Terre
\end

\Before everything else function:



for (int i=0;i<NB_SAMP;i++) { // for all samples

	double t = random(0., 2. * pi * i / NB_SAMP); 
    float x_earth, y_earth;
	x_earth = a * cos(t) - a * e;
	y_earth = a * sqrt(1 - e*e) * sin(t);
	
	sample[i][0] = t;
	sample[i][1] = x_earth;
	sample[i][2] = y_earth;
	
	float F = (G*M_earth*M_sun)/((x_earth)*(x_earth)+(y_earth)*(y_earth));
	sample[i][3] = F;
}
\end

\After everything else function:  // typically to write the results in a file
printf("Constantes à retrouver: \n");
printf("M_earth = %e ; M_sun = %e  ; constante_gravitationelle = %e  \n", M_earth, M_sun,G);
printf("Constantes trouvées: \n");
printf("M_earth = %e ; M_sun = %e  ; constante_gravitationelle = %e  \n", bBest->mass_earth, bBest->mass_sun, bBest->constante_grav);
\end

\User classes :
GenomeClass {

  float mass_earth;
  float mass_sun;
  float constante_grav;
}
\end

\GenomeClass::initialiser :

Genome.mass_sun = random(1.989e+28, 2.011e+32);  //mass of sun 
Genome.mass_earth = random(5.97e+22, 6.03e+26); //mass of earth
Genome.constante_grav = random(6.67e-10, 6.69e-12); //gravitational constant
    
\end

\GenomeClass::crossover :
float fLocus = random(0.0, 1.0);
if (fLocus < 0.33) child.mass_earth = parent2.mass_earth;
if (fLocus < 0.66 && fLocus >= 0.33) child.mass_sun = parent2.mass_sun;
if (fLocus >= 0.66) child.constante_grav = parent2.constante_grav;
\end

\GenomeClass::mutator :

\end

\GenomeClass::evaluator :
float fScore=0;
for (int i=0;i<NB_SAMP;i++) {

  float x_earth = sample[i][0];
  float y_earth = sample[i][1];
  float F = (Genome.constante_grav*Genome.mass_earth*Genome.mass_sun)/((x_earth)*(x_earth)+(y_earth)*(y_earth));
  fScore+=abs(F-sample[i][3]);
}
return fScore;
\end

\User Makefile options:
\end

\Default run parameters :
  Number of generations : 100    
  Time limit: 0                  // In seconds, 0 to deactivate
  Population size : 10000          // POP_SIZE
  Offspring size : 100%           // 40 means 40, 40% means 40% of POP_SIZE
  Crossover probability : 1     
  Mutation probability : 1       // MUT_PROB probability to CALL the mutation function
  Evaluator goal : minimise      // (or minimize)
  Selection operator: Tournament 2 
  Surviving parents: 100%        // pre-selection of parents to be part of the next gen.
  Surviving offspring: 100%      // pre-selection of children to be part of the next gen.
  Reduce parents operator: Tournament 2   // how pre-selected parents are chosen
  Reduce offspring operator: Tournament 2 // how pre-selected children are chosen
  Final reduce operator: Tournament 2 // how the next gen. is chosen from parents + children

  Elitism: Strong			           // Strong = best parents in the next gen.
  Elite: 1                       // Weak = best of parents + children in the next gen.
  Print stats: true              // Default: true
  Generate csv stats file:false  // Default: false
  Generate gnuplot script:false  // Default: false
  Generate R script:false        // Default: false
  Plot stats:true                // Default: true

  Remote island model: false     // parallelism over several processes / machines
  IP file: ip.txt                // file containing all the remote island's IP
  Server port : 2929             // server port if several islands on the same machine
  Migration probability: 0.3     // probability of migrating the best individual / gen.

  Save population: false         // false or name of the file where to save the pop
  Start from file:false          // false or name of the file where to reload the pop
\end
